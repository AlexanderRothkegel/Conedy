

%scanner Scanner.h

//%lines
%baseclass-preinclude "instruction.h"



%union {
//  command *cmd;
  expression<baseType> *doubleExpression;
  expression<bool> *boolExpression;
  expression<bool> *booleanExpression;
  expression<int> *integerExpression;
  expression<nodeDescriptor> *nodeDescriptorExpression;
  expression<string> *stringExpression;
  expression<nodeBlueprint*> *nodCmd;
  networkTemplate* netCmd;
  expression<edgeBlueprint*> *lCmd;
  instruction *cmd;
  vector <function <baseType() > > *randomVec;
  expressionVector <baseType> *vec;
}



%left <booleanExpression> OR
%left <booleanExpression> AND
%left <doubleExpression> '+' '-'
%left <doubleExpression> '*' '/'
%left <doubleExpression> UMINUS
%left <doubleExpression> LOG
%left <doubleExpression> SQRT
%left <doubleExpression> EXP
%left <doubleExpression> SIN
%left <booleanExpression> NOT
%left '(' ')'
%left <booleanExpression> EQUAL NEQUAL GREATEREQUAL LESSEQUAL
%left '.'

%token <booleanExpression> BOOLONE BOOLZERO
%token <doubleExpression> FLOATCONSTANT DOUBLEVAR
%token <boolExpression> BOOLVAR
%token <stringExpression> STRINGVAR
%token <nodCmd> NODEVAR
%type <integerExpression> integer statisticsNetworkCommandInt createNetworkCommandInt networkCommandInt
%type <nodeDescriptorExpression> nodeDescriptor
%token <integerExpression> GETRANDOMSEED COMANDLINE INT INTVAR
%token <stringExpression> ID
%type <stringExpression> SYSTEMCOMMAND WHILE STRING COMANDLINESTRING
%token PRINT LOOP  IF FOR   VECTORFOR CHAINEDFOR NETWORKTOKEN DIRECTEDNETWORKTOKEN UNDIRECTEDNETWORKTOKEN STRINGTOKEN NODETOKEN INTTOKEN DOUBLETOKEN BOOLTOKEN
// Netzwerk-Befehle
%token TIME USERANDOMPOSITIONING REMOVEEDGES SNAPSHOTATEVENTSIGNATURE SNAPSHOTATEVENT OBSERVEEVENTSIGNATURETIMES USELATTICEPOSITIONING LATTICE READPARAMS OBSERVEALL REPLACEEDGES REWIRETARGET REMOVEEDGE REMOVERANDOMEDGES ADDRANDOMEDGES ADDRANDOMEDGESDEGREEDISTRIBUTION REWIRESOURCE REPLACENODES REMOVENODES SETDIRECTED NORMALIZEINPUTS NORMALIZEOUTPUTS SETUNDIRECTED DELAYLINK COMPONENT CYCLE LINE CLEAR SNAPSHOT ADDNODE  PRINTNODESTATISTICS LINKSTRENGTH ADDWEIGHTEDEDGE EXIT ADDEDGE BEEWEB RANDOMNETWORK SCALEFREENETWORK OBSERVE OBSERVECOMPONENTS OBSERVEHIST OBSERVEMEANPHASE OBSERVEPHASECOHERENCE OBSERVEMEAN OBSERVETIME OBSERVEEVENT OBSERVEEVENTTIMES OBSERVEEVENTTIMESEQUALS NOISETOSTATES RANDOMIZESTATES RANDOMIZEPARAMETER MEANDEGREE RANDOMIZEWEIGHTS TORUS CONNECTCLOSENODESTORUS CONNECTCLOSENODES TORUSNEARESTNEIGHBORS READINITIALCONDITION COMPLETENETWORK MEANWEIGHT REWIRE SAVEADJACENCYMATRIX SAVEADJACENCYLIST SAVEGRAPHML NUMBERVERTICES MEANCLUSTERING NEWLINE GETPARAM EVOLVE REALIGNWHENDISTANT REALIGNATEVENT REALIGNATEVENTSIGNATURE ISLINKED DEGREE BETWEENNESSCENTRALITY MEANPATHLENGTH DEGREECENTRALITY CLOSENESSCENTRALITY SELECT COUNTEDGES GETSTATE INDEGREE OUTDEGREE ISCONNECTED ISDIRECTED SETPARAM
// Nodes
%token NODE REMOVEOBSERVER STARTINGCONDITIONOPENWAVEENDING STARTINGCONDITIONSMALLDISTURBANCE STARTINGCONDITIONOPENWAVEMIDDLE STREAMINNODE DYNAMICS STREAMINLATTICE SETSTATE CREATEFROMADJACENCYMATRIX CREATEFROMADJACENCYLIST SETPARAMS SYSTEM
%token SETRANDOMSEED  RANDOMBLUEPRINTNODE STREAMOUTNODE SETTIME
// addNewNode.py token
// Edges
%token COMPONENT_WEIGHTEDEDGE COMPONENT_STATICWEIGHTEDEDGE
%token STATICCOMPONENT STATICCOMPONENT_WEIGHTEDEDGE STATICCOMPONENT_STATICWEIGHTEDEDGE
%token RANDOMTARGET RANDOMTARGET_WEIGHTEDEDGE RANDOMTARGET_STATICWEIGHTEDEDGE
%token STEPEDGE STEPEDGE_WEIGHTEDEDGE STEPEDGE_STATICWEIGHTEDEDGE

PULSECOUPLEEDGE STATICWEIGHTEDEDGE PULSECOUPLEDELAYEDGE WEIGHTEDEDGE EDGE
// Random
%token GAUSSIAN BIMODAL EXPONENTIAL POWERLAW UNIFORM FROMFILE ADDINPUTFILE  CONSTANT POISSON  INDEGREEDISTRIBUTION OUTDEGREEDISTRIBUTION
// Arithmetic
%token  ASSIGNPLUS ASSIGNMINUS ASSIGNDIVIDE ASSIGNTIMES PLUSPLUS MINUSMINUS ASSIGNMODOLO
%token <netCmd> NETWORKVAR
%type <cmd> loop print instruction declare assign networkCommand dynNetworkCommand bluePrintCommand commands commandBlock while createNetworkCommand globalCommand for if vectorFor system spatialNetworkCommand

%type <stringExpression> identifier
%type <stringExpression> string inputFileName

%type <doubleExpression> baseType statisticsNetworkCommandBaseType networkCommandBaseType
%type <booleanExpression> bool
%type <booleanExpression> statisticsNetworkCommandBool networkCommandBool
%type <nodCmd> node createNode createNodeOptional
%type <netCmd> NETWORK
%type <lCmd> link createLink createLinkOptional
%type <vec> argList
%type <randomVec> randomList
%type <doubleExpression> random
%start program


