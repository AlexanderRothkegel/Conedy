


#network_edgeVerbosity = 0.0;


setRandomSeed(0);
network n;

int networkSize;

networkSize = 10;



n.randomNetwork<node , weightedEdge  > ( networkSize, 0.4);


n.randomizeWeights (uniform (1.1,1.1));


n.saveAdjacencyList("output/normalizeInputs.co.before");
n.normalizeInWeightSum (3.0);

print "Should be "+ 3.0/n.meanDegree()+" :"+n.meanWeight()+newline;

n.saveAdjacencyList("output/normalizeInputs.co.after");


:sort -n output/normalizeInputs.co.after -k2 > output/normalizeInputs.co.after.sort:;
