


int nodeNumber;


network n;



nodeNumber = n.addNode<exponentialOde>();
n.setState(nodeNumber,10.0);
n.observeTime("output/compareWithExponential.co.ode");
n.observeAll("output/compareWithExponential.co.ode");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();





#nodeNumber = n.addNode<exponentialSde>();
#n.setState(nodeNumber,10.0);
#n.observeTime("output/compareWithExponential.co.sde");
#n.observeAll("output/compareWithExponential.co.sde");
#n.evolve (0.0,10.0);
#n.removeObserver();
#n.clear();
#
#
#nodeNumber = n.addNode<exponentialSde>();
#exponentialSde_sigmaNoise = 0.1;
#n.setState(nodeNumber,10.0);
#n.observeTime("output/compareWithExponential.co.noisyExponential");
#n.observeAll("output/compareWithExponential.co.noisyExponential");
#n.evolve (0.0,10.0);
#n.removeObserver();
#n.clear();
#


nodeNumber = n.addNode<exponentialStatic>();
n.setState(nodeNumber,10.0);
n.observeTime("output/compareWithExponential.co.static");
n.observeAll("output/compareWithExponential.co.static");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();

nodeNumber = n.addNode<exponentialGsl>();
n.setState(nodeNumber,10.0);
gslOdeNode_stepType = "gsl_odeiv_step_rk2";
n.observeTime("output/compareWithExponential.co.rk2");
n.observeAll("output/compareWithExponential.co.rk2");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();


nodeNumber = n.addNode<exponentialGsl>();
n.setState(nodeNumber,10.0);
gslOdeNode_stepType = "gsl_odeiv_step_rk4";
n.observeTime("output/compareWithExponential.co.rk4");
n.observeAll("output/compareWithExponential.co.rk4");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();


nodeNumber = n.addNode<exponentialGsl>();
n.setState(nodeNumber,10.0);
gslOdeNode_stepType = "gsl_odeiv_step_rkf45";
n.observeTime("output/compareWithExponential.co.rk45");
n.observeAll("output/compareWithExponential.co.rk45");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();

nodeNumber = n.addNode<exponentialGsl>();
n.setState(nodeNumber,10.0);
gslOdeNode_stepType = "gsl_odeiv_step_rkck";
n.observeTime("output/compareWithExponential.co.rkck");
n.observeAll("output/compareWithExponential.co.rkck");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();

nodeNumber = n.addNode<exponentialGsl>();
n.setState(nodeNumber,10.0);
gslOdeNode_stepType = "gsl_odeiv_step_rk8pd";
n.observeTime("output/compareWithExponential.co.rk8pd");
n.observeAll("output/compareWithExponential.co.rk8pd");
n.evolve (0.0,10.0);
n.removeObserver();
n.clear();
